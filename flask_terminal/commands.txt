DEBUG MODE ON:
environment variable: FLASK_DEBUG=1

FILE TO RUN:
environment variable: FLASK_APP=file

GENERATE A RANDOM SECRET KEY
in python shell:
	import os
	os.urandom(12).hex() <<< 12 bytes in hex format

DATABASE PACKAGES
pip install flask-sqlalchemy <<< ORM(Object-relational mapper)

FLASK FORMS
pip install flask-wtf
pip install wtforms

FOR HASHING
pip install flask_bcrypt

INITIALIZE DATABASE
in python shell:
	from app import db
	db.create_all()
testing:
	from app import User
	user1 = User(name="duck")
adding and saving to database:
	db.session.add(user1)
	db.session.commit()
see all database entries for a certain table(User in this case):
	User.query.all()
see entries satisfying certain criteria:
	User.query.filter_by(name='duck')
iterate:
	for user in User.query.filter_by(name="duck"):
		user.name
delete data and tables from database:
	db.drop_all()
roll 1 db.session.commit() back:
	db.session.rollback()
use the backref to get the related model:
	smt.backref
